I"<p><a href="https://vjudge.net/problem/UVA-679">UVA679</a></p>

<p>二叉树的一条初级题目。很有意思的题。</p>

<p>得到正确答案很简单，用数组模拟二叉树即可，问题是如何不超时。</p>

<p>如何给多少个小球就模拟多少次一定会超时。甚至使用一个状态数组来判断每个节点的开关状态都会超时，因此这题看上去简单，但是想要AC还是要有一定的技巧的。</p>

<p>紫书给出的方法是用小球的id直接判断小球会下落到左子树还是右子树，这样无论有多少数目的小球都只需要模拟一次。</p>

<p>以下是AC代码</p>

<p><a href="https://udebug.com/UVa/679">测试用例https://udebug.com/UVa/12657</a></p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;iostream&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">d</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
<span class="c1">//	freopen("data.in","r",stdin);</span>
<span class="c1">//	freopen("data.out","w",stdout);</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
	<span class="k">while</span><span class="p">(</span><span class="n">n</span><span class="o">--</span><span class="p">){</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">"%d%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">d</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
		<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">m</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">){</span>
				<span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
				<span class="n">pos</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">pos</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">else</span><span class="p">{</span>
				<span class="n">m</span> <span class="o">=</span> <span class="n">m</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
				<span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">pos</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>		
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></div></div>

:ET